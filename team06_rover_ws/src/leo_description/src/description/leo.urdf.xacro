<?xml version="1.0" encoding="utf-8"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro"
       name="leo">

  <xacro:arg name="robot_ns" default="leo"/>

  <xacro:arg name="fixed" default="false"/>
  <xacro:arg name="default_antenna" default="true"/>
  <xacro:arg name="rockers_fixed" default="true"/>

  <xacro:include filename="$(find leo_description)/src/description/leo.gazebo.xacro"/>

  <xacro:if value="$(arg fixed)">
    <link name="world"/>
    <joint name="fixed" type="fixed">
      <parent link="world"/>
      <child link="base_link"/>
      <origin xyz="0.0 0.0 0"/>
    </joint>
  </xacro:if>

  <!-- MACROS -->

  <xacro:macro name="rocker_link" params="name">
    <link name="rocker_${name}_link">
      <inertial>
        <mass value="1.387336"/>
        <origin xyz="0 0.01346 -0.06506"/>
        <inertia
          ixx="0.002956" ixy="-0.000001489324" ixz="-0.000008103407"
          iyy="0.02924"  iyz="0.00007112"
          izz="0.02832"/>
      </inertial>
      <visual>
        <geometry>
          <mesh filename="package://leo_description/meshes/Rocker.dae"/>
        </geometry>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://leo_description/meshes/Rocker_outline.stl"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <xacro:macro name="wheel_link" params="name model"> 
    <link name="wheel_${name}_link">
      <inertial>
        <mass value="0.283642"/>
        <origin xyz="0 0.030026 0"/>
        <inertia
          ixx="0.000391"  ixy="0.00000123962" ixz="5.52582e-7"
          iyy="0.0004716" iyz="-0.000002082042"
          izz="0.000391"/>
      </inertial>
      <visual>
        <geometry>
          <mesh filename="package://leo_description/meshes/Wheel${model}.dae"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0.04485 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="0.057" length="0.07"/>
        </geometry>
      </collision>
      <collision>
        <origin xyz="0 0.04485 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="0.0625" length="0.04"/>
        </geometry>
      </collision>
      <collision>
        <geometry>
          <mesh filename="package://leo_description/meshes/Wheel_outline.stl"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <!-- LINKS -->

  <link name="base_link">
    <inertial>
      <mass value="1.584994"/>
      <origin xyz="-0.019662 0.011643 -0.031802"/>
      <inertia
        ixx="0.01042" ixy="0.001177" ixz="-0.0008871"
        iyy="0.01045" iyz="0.0002226"
        izz="0.01817"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://leo_description/meshes/Chassis.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://leo_description/meshes/Chassis_outline.stl"/>
      </geometry>
    </collision>
  </link>

  <link name="base_footprint"/>

  <xacro:rocker_link name="L"/>
  <xacro:rocker_link name="R"/>
  <xacro:wheel_link name="FL" model="A"/>
  <xacro:wheel_link name="RL" model="A"/>
  <xacro:wheel_link name="FR" model="B"/>
  <xacro:wheel_link name="RR" model="B"/>

  <xacro:if value="$(arg default_antenna)">
    <link name="antenna_link">
      <inertial>
        <mass value="0.001237"/>
        <origin xyz="0 0 0.028828"/>
        <inertia
          ixx="2.5529e-7" ixy="0.0" ixz="0.0"
          iyy="2.5529e-7" iyz="0.0"
          izz="1.354e-8"/>
      </inertial>
      <visual>
        <geometry>
          <mesh filename="package://leo_description/meshes/Antenna.dae"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0.028"/>
        <geometry>
          <cylinder radius="0.0055" length="0.056"/>
        </geometry>
      </collision>
    </link>
  </xacro:if>

  <link name="camera_frame"/>
  <link name="camera_optical_frame"/>

  <!-- JOINTS -->

  <xacro:if value="$(arg rockers_fixed)">
    <xacro:property name="rockers_joint_type" value="fixed"/>
  </xacro:if>
  <xacro:unless value="$(arg rockers_fixed)">
    <xacro:property name="rockers_joint_type" value="revolute"/>
  </xacro:unless>

  <joint name="rocker_L_joint" type="${rockers_joint_type}">
    <origin xyz="0.00263 0.14167 -0.04731" rpy="0 0 ${pi}"/>
    <parent link="base_link"/>
    <child link="rocker_L_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="100.0" lower="-0.24" upper="0.24" velocity="100.0"/>
    <dynamics friction="1.0" damping="0.1"/>
  </joint>

  <joint name="rocker_R_joint" type="${rockers_joint_type}">
    <origin xyz="0.00263 -0.14167 -0.04731" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="rocker_R_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="100.0" lower="-0.24" upper="0.24" velocity="100.0"/>
    <dynamics friction="1.0" damping="0.1"/> 
    <mimic joint="rocker_L_joint"/>
  </joint>

  <joint name="wheel_FL_joint" type="continuous">
    <origin xyz="-0.15256 -0.08214 -0.08802" rpy="0 0 0"/>
    <parent link="rocker_L_link"/>
    <child link="wheel_FL_link"/>
    <axis xyz="0 -1 0"/>
    <limit effort="2.0" velocity="6.0"/>
    <dynamics friction="0.3125" damping="0.1"/>
  </joint>

  <joint name="wheel_RL_joint" type="continuous">
    <origin xyz="0.15256 -0.08214 -0.08802" rpy="0 0 0"/>
    <parent link="rocker_L_link"/>
    <child link="wheel_RL_link"/>
    <axis xyz="0 -1 0"/>
    <limit effort="2.0" velocity="6.0"/>
    <dynamics friction="0.3125" damping="0.1"/>
  </joint>

  <joint name="wheel_FR_joint" type="continuous">
    <origin xyz="-0.15256 -0.08214 -0.08802" rpy="0 0 0"/>
    <parent link="rocker_R_link"/>
    <child link="wheel_FR_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="2.0" velocity="6.0"/>
    <dynamics friction="0.3125" damping="0.1"/>
  </joint>

  <joint name="wheel_RR_joint" type="continuous">
    <origin xyz="0.15256 -0.08214 -0.08802" rpy="0 0 0"/>
    <parent link="rocker_R_link"/>
    <child link="wheel_RR_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="2.0" velocity="6.0"/>
    <dynamics friction="0.3125" damping="0.1"/> 
  </joint>

  <xacro:if value="$(arg default_antenna)">
    <joint name="antenna_joint" type="fixed">
      <origin xyz="-0.0052 0.056 -0.0065" rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="antenna_link"/>
    </joint>
  </xacro:if>

  <joint name="camera_joint" type="fixed">
    <origin xyz="0.0971 0 -0.0427" rpy="0 0.2094 0"/>
    <parent link="base_link"/>
    <child link="camera_frame"/>
  </joint>

  <joint name="camera_optical_joint" type="fixed">
    <origin xyz="0 0 0" rpy="-${pi/2} 0.0 -${pi/2}"/>
    <parent link="camera_frame"/>
    <child link="camera_optical_frame"/>
  </joint>

  <joint name="footprint_joint" type="fixed">
    <origin xyz="0 0 -0.19783" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="base_footprint"/>
  </joint>

  <!-- TRANSMISSIONS -->
  
  <transmission name="wheel_FL_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_FL_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="wheel_FL_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>

  <transmission name="wheel_RL_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_RL_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="wheel_RL_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>

  <transmission name="wheel_FR_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_FR_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="wheel_FR_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>

  <transmission name="wheel_RR_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_RR_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="wheel_RR_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>

  <xacro:unless value="$(arg rockers_fixed)">
    <transmission name="rocker_L_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="rocker_L_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="rocker_L_virtual_motor"/>
    </transmission>

    <transmission name="rocker_R_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="rocker_R_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="rocker_R_virtual_motor"/>
    </transmission>
  </xacro:unless>
  
  
  
  
  
    
  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
  </link>
  
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0 0 0"/>
  </joint>
  
  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
          <!--<namespace>/demo</namespace>-->
          <remapping>~/out:=imu</remapping>
        </ros>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>
  
  
  
  
  
  
  
  
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="diff_drive">
      <ros>
        <!--<namespace>/demo</namespace>-->
      </ros>
      
      <update_rate>30</update_rate>
      
      <!-- wheels -->
      <num_wheel_pairs>2</num_wheel_pairs>
      <left_joint>wheel_FL_joint</left_joint>
      <left_joint>wheel_RL_joint</left_joint>
      <right_joint>wheel_FR_joint</right_joint>
      <right_joint>wheel_RR_joint</right_joint>
      
      <!-- kinematics -->
      <wheel_separation>0.4</wheel_separation>
      <wheel_diameter>0.2</wheel_diameter>
      
      <!-- limits -->
      <max_wheel_torque>200</max_wheel_torque>
      <max_wheel_acceleration>10.0</max_wheel_acceleration>
      
      <!-- command -->
      <command_topic>cmd_vel</command_topic>
      <odometry_topic>odom</odometry_topic>
      
      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>false</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
      
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
    </plugin>
  </gazebo>
  
  
  
  
  
  <link name="lidar_link">
    <visual>
      <origin xyz="0 0 0.003"/>
      <geometry>
        <box size="0.079 0.086 0.006"/>
      </geometry>
      <material name="support">
        <color rgba="0.5 0.5 0.5 1.0"/>
      </material>
    </visual>
    <visual>
      <origin xyz="0 0 0.023"/>
      <geometry>
        <cylinder radius="0.038" length="0.04"/>
      </geometry>
      <material name="lidar">
        <color rgba="1.0 0.0 0.0 0.7"/>
      </material>
    </visual>
    
    <collision>
      <origin xyz="0 0 0.003"/>
      <geometry>
        <box size="0.079 0.086 0.006"/>
      </geometry>
    </collision>
    <collision>
      <origin xyz="0 0 0.023"/>
      <geometry>
        <cylinder radius="0.038" length="0.04"/>
      </geometry>
    </collision>
  </link>
  
  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0.0775 0 0"/>
  </joint>
  
  <gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>0.000000</min_angle>
            <max_angle>6.280000</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120000</min>
          <max>3.5</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="scan">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  
  
  
  


  <xacro:include filename="$(find leo_description)/src/description/_d435.urdf.xacro"/>

  <xacro:sensor_d435 parent="base_link" name="d435_camera">
    <origin xyz="0.075 0 0.060" rpy="0 0 0"/>
  </xacro:sensor_d435>
  
  <joint name="d435_joint" type="fixed">
		<parent link="base_link"/>
		<child link="d435_camera_link"/>
		<origin xyz="0.075 0 0.060" rpy="0 0 0"/>
	</joint>

	<link name="camera_depth_frame"/>

	<joint name="camera_depth_joint" type="fixed">
		<origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>
		<parent link="d435_camera_link"/>
		<child link="camera_depth_frame"/>
	</joint>
		
	<gazebo reference="d435_camera_link">
		<sensor name="depth_camera" type="depth">
		  <visualize>true</visualize>
		  <update_rate>30.0</update_rate>
		  <camera name="depth_camera">
		    <horizontal_fov>1.047198</horizontal_fov>
		    <image>
		      <width>640</width>
		      <height>480</height>
		      <format>R8G8B8</format>
		    </image>
		    <clip>
		      <near>0.05</near>
		      <far>3</far>
		    </clip>
		  </camera>
		  <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
		    <baseline>0.2</baseline>
		    <alwaysOn>true</alwaysOn>
		    <updateRate>0.0</updateRate>
		    <frame_name>camera_depth_frame</frame_name>
		    <pointCloudCutoff>0.5</pointCloudCutoff>
		    <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
		    <distortionK1>0</distortionK1>
		    <distortionK2>0</distortionK2>
		    <distortionK3>0</distortionK3>
		    <distortionT1>0</distortionT1>
		    <distortionT2>0</distortionT2>
		    <CxPrime>0</CxPrime>
		    <Cx>0</Cx>
		    <Cy>0</Cy>
		    <focalLength>0</focalLength>
		    <hackBaseline>0</hackBaseline>
		  </plugin>
		</sensor>
	</gazebo>
			

</robot>
